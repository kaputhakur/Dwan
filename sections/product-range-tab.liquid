<link rel="stylesheet" href="{{ 'collection-tabbing.css' | asset_url }}">

<script src="{{ 'collection-tab.js'|asset_url }}"></script>

<link rel="stylesheet" href="{{ 'swiper.css' | asset_url }}">

<script src="{{ 'swiper.js'|asset_url }}"></script>

{% style %}
  .section-{{section.id}}-padding{
    padding-top:{{section.settings.padding_top|times :0.75 | round:0}}px;
  padding-bottom:{{section.settings.padding_bottom|times :0.75 | round:0}}px;
  }
  @media screen and (min-width:750px){
   .section-{{section.id}}-padding{
    padding-top:{{section.settings.padding_top}}px;
  padding-bottom:{{section.settings.padding_bottom}}px;
  }
  }
{% endstyle %}


<div class="{% if section.settings.width =='full-width'%}full-width{% else %} page-width{% endif %}">
  <div class="product-range-wrapper">
    {% if section.settings.title != blank %}
      <h2>{{ section.settings.title }}</h2>
    {% endif %}
    <div class="product-range-content">
      <div class="tabs">
        {% for block in section.blocks %}
          {% assign collection = collections[block.settings['slider-collection']] %}
          <div
            class="Tab-{{ section.id  }} tablinks {% if forloop.index == 1 %}active{% endif %}"
            data-id="Tab-{{ section.id  }}{{ forloop.index }}"
          >
            {%- for product in collection.products limit: 1 -%}
              <p>{{ collection.title }}</p>
            {% endfor %}
          </div>
        {% endfor %}
      </div>
      <div class="wrapper_tabcontent">
        {% for block in section.blocks %}
          <div
            id="Tab-{{ section.id  }}{{ forloop.index }}"
            class="TabContent-{{ section.id  }} tabcontent {% if forloop.index == 1 %}active{% endif %}"
          >
            <!-- -----------    ---------    ------ product silder-------------------------------- -->
            <div class="collection-carousel swiper">
              <div class="swiper-wrapper">
                {% assign collection = collections[block.settings['slider-collection']] %}
                {% for product in collection.products %}
                  <div class="featured-product swiper-slide">
                     {% render 'custom-card-product',card_product:product%}
                   </div>
                {% endfor %}
              </div>
            </div>

            <!-- ----------------------product silder end----- -------------------------------- -->
          </div>
        {% endfor %}
      </div>
    </div>
  </div>
</div>

<script>


  
  var tabLinks = document.querySelectorAll(".Tab-{{ section.id}}");
  var tabContent = document.querySelectorAll(".TabContent-{{ section.id}}");
  tabLinks.forEach(function(el) {
     el.addEventListener("click", openTabs);
  });
  function openTabs(el) {
     var btnTarget = el.currentTarget;
     var id = btnTarget.dataset.id;
    tabContent.forEach(function(el) {
        el.classList.remove("active");
     });
  tabLinks.forEach(function(el) {
        el.classList.remove("active");
     });

     document.querySelector("#" + id).classList.add("active");
     btnTarget.classList.add("active");
  }
</script>
<script>
  document.addEventListener("DOMContentLoaded", function () {
    // Initialize variables to keep track of selected image and size.
    let selectedImage = "";
    let selectedSize = "";

    // Function to update the selected image when a color is clicked.
    function updateSelectedImage(color) {
      selectedImage = color;
      // Update the displayed image based on the selected color.
      // You can replace 'product-image' with the actual ID or class of your image container.
      document.querySelector(".product-image").innerHTML = `
        <a href="${card_product.url}">
          <img class="borrder-all radius-20 feature-image" src="${getImageUrl(selectedImage)}">
        </a>
      `;
    }

    // Function to update the selected size when a size is clicked.
    function updateSelectedSize(size) {
      selectedSize = size;
    }

    // Function to add the selected product to the cart.
    function addToCart() {
      // Check if both image and size are selected.
      if (selectedImage && selectedSize) {
        // Find the variant ID that matches the selected options.
        let variantId = findVariantId(selectedImage, selectedSize);
        if (variantId) {
          // Add the product to the cart using Shopify's AJAX API.
          Shopify.addItem(variantId, 1, function (cart) {
            // You can add code here to update the cart widget or show a success message.
            console.log("Product added to cart!");
          });
        } else {
          console.error("Variant not found for selected options.");
        }
      } else {
        console.error("Please select both an image and a size.");
      }
    }

    // Function to find the variant ID based on selected options.
    function findVariantId(image, size) {
      // Iterate through the product variants to find the matching variant.
      for (const variant of card_product.variants) {
        if (variant.option1 === image && variant.option2 === size) {
          return variant.id;
        }
      }
      return null; // Return null if no matching variant is found.
    }

    // Function to get the image URL based on the selected color.
    function getImageUrl(color) {
      // Iterate through the product images to find the image with the matching alt text.
      for (const image of card_product.images) {
        if (image.alt === color) {
          return "{{ image.src | img_url: '248x333' }}";
        }
      }
      return ""; // Return an empty string if no matching image is found.
    }

    // Attach click event listeners to color and size selectors.
    document.querySelectorAll(".size-selector").forEach(function (sizeSelector) {
      sizeSelector.addEventListener("click", function () {
        const size = this.querySelector("input").value;
        updateSelectedSize(size);
      });
    });

    document.querySelectorAll(".variant-images").forEach(function (colorSelector) {
      colorSelector.addEventListener("click", function () {
        const color = this.querySelector("img").alt;
        updateSelectedImage(color);
      });
    });

    // Attach click event listener to "Add to Cart" button.
    document.querySelector(".add-to-cart-button").addEventListener("click", function () {
      addToCart();
    });
  });
</script>


{% schema %}
{
  "name": "Product Range Tab",
  "settings": [
      {
    "type": "select",
    "id": "width",
    "label": "Page width",
    "options": [
      {
        "value": "full-width",
        "label": "Full Width"
      },
      {
        "value": "page-width",
        "label": "Wrapper Width"
      },
      {
        "value": "narrow-width",
        "label": "Narrow width"
      }
    ]
  },
     {
      "type": "text",
      "id": "title",
      "label": "Heading"
    },
    {
      "type":"range",
      "label":"section top padding",
      "id":"padding_top",
      "max":100,
      "min":0,
      "unit":"px",
      "default":36
    },
     {
      "type":"range",
      "label":"section bottom padding",
      "id":"padding_bottom",
      "max":100,
      "min":0,
      "unit":"px",
      "default":36
    },
     {
      "type": "select",
      "id": "image_ratio",
      "options": [
        {
          "value": "adapt",
          "label": "t:sections.featured-collection.settings.image_ratio.options__1.label"
        },
        {
          "value": "portrait",
          "label": "t:sections.featured-collection.settings.image_ratio.options__2.label"
        },
        {
          "value": "square",
          "label": "t:sections.featured-collection.settings.image_ratio.options__3.label"
        }
      ],
      "default": "adapt",
      "label": "t:sections.featured-collection.settings.image_ratio.label"
    },
    {
    "type": "checkbox",
    "id": "show_secondary_image",
    "default": false,
    "label": "t:sections.featured-collection.settings.show_secondary_image.label"
  },
    {
    "type": "checkbox",
    "id": "enable_quick_add",
    "default": false,
    "label": "t:sections.featured-collection.settings.enable_quick_buy.label"
  }

    ],
    "blocks":[
       {
      "type": "@app"
    },
    {
      "type":"content",
      "name":"content",
      "settings":[


         {
      "type": "collection",
      "id": "slider-collection",
      "label": "Collection"
     },
      {
      "type": "text",
      "id": "title",
      "label": "Block Title"
     }
     ]
     },
         {
    "type": "variant_picker",
    "name": "t:sections.main-product.blocks.variant_picker.name",
    "limit": 1,
    "settings": [
      {
        "type": "select",
        "id": "picker_type",
        "options": [
          {
            "value": "dropdown",
            "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__1.label"
          },
          {
            "value": "button",
            "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.options__2.label"
          }
        ],
        "default": "button",
        "label": "t:sections.main-product.blocks.variant_picker.settings.picker_type.label"
      }
    ]
  },
   {
      "type": "buy_buttons",
      "name": "t:sections.main-product.blocks.buy_buttons.name",
      "limit": 1,
      "settings": [
        {
          "type": "checkbox",
          "id": "show_dynamic_checkout",
          "default": true,
          "label": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.label",
          "info": "t:sections.main-product.blocks.buy_buttons.settings.show_dynamic_checkout.info"
        },
        {
          "type": "checkbox",
          "id": "show_gift_card_recipient",
          "default": false,
          "label": "t:sections.main-product.blocks.buy_buttons.settings.show_gift_card_recipient.label",
          "info": "t:sections.main-product.blocks.buy_buttons.settings.show_gift_card_recipient.info"
        }
      ]
    }

  ],
  "presets":[
    {
      "name":"Product Rnge Tab"
    }
  ]
}
{% endschema %}

{% stylesheet %}
{% endstylesheet %}

{% javascript %}
{% endjavascript %}
